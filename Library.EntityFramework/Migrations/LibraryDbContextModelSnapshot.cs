// <auto-generated />
using Library.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Library.EntityFramework.Migrations
{
    [DbContext(typeof(LibraryDbContext))]
    partial class LibraryDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Library.Domain.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Author")
                        .IsRequired();

                    b.Property<string>("Title")
                        .IsRequired();

                    b.Property<string>("isBN")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Books");

                    b.HasData(
                        new { Id = 1, Author = "Gabriel Garcia", Title = "Los dias finales en DIGEPRES", isBN = "Test" }
                    );
                });

            modelBuilder.Entity("Library.Domain.Page", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BookId");

                    b.Property<string>("FileName")
                        .IsRequired();

                    b.Property<string>("Format")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.ToTable("Pages");

                    b.HasData(
                        new { Id = 1L, BookId = 1, FileName = "Digepres1", Format = "PDF" },
                        new { Id = 2L, BookId = 1, FileName = "Digepres2", Format = "PDF" },
                        new { Id = 3L, BookId = 1, FileName = "Digepres3", Format = "PDF" }
                    );
                });

            modelBuilder.Entity("Library.Domain.Page", b =>
                {
                    b.HasOne("Library.Domain.Book", "Book")
                        .WithMany("Pages")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
